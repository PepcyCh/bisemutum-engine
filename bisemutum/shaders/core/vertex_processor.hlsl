#pragma once

#define VERTEX_ATTRIBS_LOCATION_POSITION 0
#define VERTEX_ATTRIBS_LOCATION_COLOR 1
#define VERTEX_ATTRIBS_LOCATION_NORMAL 2
#define VERTEX_ATTRIBS_LOCATION_TANGENT 3
#define VERTEX_ATTRIBS_LOCATION_BITANGENT 4
#define VERTEX_ATTRIBS_LOCATION_TEXCOORD0 5
#define VERTEX_ATTRIBS_LOCATION_TEXCOORD1 6
#define VERTEX_ATTRIBS_LOCATION_TEXCOORD2 7
#define VERTEX_ATTRIBS_LOCATION_TEXCOORD3 8
#define VERTEX_ATTRIBS_LOCATION_TEXCOORD4 9
#define VERTEX_ATTRIBS_LOCATION_TEXCOORD5 10
#define VERTEX_ATTRIBS_LOCATION_TEXCOORD6 11
#define VERTEX_ATTRIBS_LOCATION_TEXCOORD7 12

struct VertexAttributes {
    [[vk::location(VERTEX_ATTRIBS_LOCATION_POSITION)]] float3 position : POSITION;
#if VERTEX_ATTRIBUTES_TYPE_POSITION_ONLY
    [[vk::location(VERTEX_ATTRIBS_LOCATION_NORMAL)]] float3 normal : NORMAL;
    [[vk::location(VERTEX_ATTRIBS_LOCATION_TANGENT)]] float4 tangent : TANGENT;
    [[vk::location(VERTEX_ATTRIBS_LOCATION_TEXCOORD0)]] float2 texcoord0 : TEXCOORD0;
#endif
};

struct VertexAttributesOutput {
    float4 sv_position : SV_POSITION;
#if VERTEX_ATTRIBUTES_TYPE_POSITION_ONLY
    float3 position_world : TEXCOORD0;
    float3 normal_world : TEXCOORD1;
    float3 tangent_world : TEXCOORD2;
    float3 bitangent_world : TEXCOORD3;
    float2 texcoord0 : TEXCOORD4;
#endif
};
